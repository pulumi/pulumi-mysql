// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mysql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    @Import(name="authenticationPlugin")
    private @Nullable Output<String> authenticationPlugin;

    public Optional<Output<String>> authenticationPlugin() {
        return Optional.ofNullable(this.authenticationPlugin);
    }

    @Import(name="endpoint", required=true)
    private Output<String> endpoint;

    public Output<String> endpoint() {
        return this.endpoint;
    }

    @Import(name="maxConnLifetimeSec", json=true)
    private @Nullable Output<Integer> maxConnLifetimeSec;

    public Optional<Output<Integer>> maxConnLifetimeSec() {
        return Optional.ofNullable(this.maxConnLifetimeSec);
    }

    @Import(name="maxOpenConns", json=true)
    private @Nullable Output<Integer> maxOpenConns;

    public Optional<Output<Integer>> maxOpenConns() {
        return Optional.ofNullable(this.maxOpenConns);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="proxy")
    private @Nullable Output<String> proxy;

    public Optional<Output<String>> proxy() {
        return Optional.ofNullable(this.proxy);
    }

    @Import(name="tls")
    private @Nullable Output<String> tls;

    public Optional<Output<String>> tls() {
        return Optional.ofNullable(this.tls);
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.authenticationPlugin = $.authenticationPlugin;
        this.endpoint = $.endpoint;
        this.maxConnLifetimeSec = $.maxConnLifetimeSec;
        this.maxOpenConns = $.maxOpenConns;
        this.password = $.password;
        this.proxy = $.proxy;
        this.tls = $.tls;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder authenticationPlugin(@Nullable Output<String> authenticationPlugin) {
            $.authenticationPlugin = authenticationPlugin;
            return this;
        }

        public Builder authenticationPlugin(String authenticationPlugin) {
            return authenticationPlugin(Output.of(authenticationPlugin));
        }

        public Builder endpoint(Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder maxConnLifetimeSec(@Nullable Output<Integer> maxConnLifetimeSec) {
            $.maxConnLifetimeSec = maxConnLifetimeSec;
            return this;
        }

        public Builder maxConnLifetimeSec(Integer maxConnLifetimeSec) {
            return maxConnLifetimeSec(Output.of(maxConnLifetimeSec));
        }

        public Builder maxOpenConns(@Nullable Output<Integer> maxOpenConns) {
            $.maxOpenConns = maxOpenConns;
            return this;
        }

        public Builder maxOpenConns(Integer maxOpenConns) {
            return maxOpenConns(Output.of(maxOpenConns));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder proxy(@Nullable Output<String> proxy) {
            $.proxy = proxy;
            return this;
        }

        public Builder proxy(String proxy) {
            return proxy(Output.of(proxy));
        }

        public Builder tls(@Nullable Output<String> tls) {
            $.tls = tls;
            return this;
        }

        public Builder tls(String tls) {
            return tls(Output.of(tls));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ProviderArgs build() {
            $.endpoint = Objects.requireNonNull($.endpoint, "expected parameter 'endpoint' to be non-null");
            $.proxy = Codegen.stringProp("proxy").output().arg($.proxy).env("ALL_PROXY", "all_proxy").getNullable();
            $.tls = Codegen.stringProp("tls").output().arg($.tls).env("MYSQL_TLS_CONFIG").def("false").getNullable();
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
